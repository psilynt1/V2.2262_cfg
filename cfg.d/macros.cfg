
#####################################################################
#### Macros
#####################################################################

# -- SB LED STATES --
#    STATUS_READY
#    STATUS_OFF
#    STATUS_BUSY
#    STATUS_HEATING
#    STATUS_LEVELING
#    STATUS_HOMING
#    STATUS_CLEANING
#    STATUS_MESHING
#    STATUS_CALIBRATING_Z 
#    STATUS_PRINTING
#    STATUS_STANDBY
#    SET_LOGO_LEDS_OFF
#    SET_NOZZLE_LEDS_OFF
#    SET_NOZZLE_LEDS_ON
# -- CANOPY LED STATES --
#    CANOPY_LED_FULL
#    CANOPY_LED_PRINT
#    CANOPY_LED_IDLE
#    CANOPY_LED_OFF

##  slicer start
[gcode_macro PRINT_START] 
gcode:
    # slicer variables
    {% set CHAMBER = params.CHAMBER|default(40)|int %}
    {% set BED     = params.BED|default(105)|int    %}
    {% set HOTEND  = params.HOTEND|default(245)|int %}
    {% set HEPH    = (0.75 * HOTEND)|round(0)|int   %}      ; 75% hotend preheat

    # preheat all the things
    M117 Preheating
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED}   ; start bed heater
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={HEPH}    ; start hotend heater
    NEVERMORE_START                 ; now with 2x the cleaning and warming action
    PRINT_FAN_START                 ; run print fan to help prevent air duct warping
    CANOPY_LED_PRINT                ; set canopy light to print brightness
    STATUS_HEATING                  ; stealthburner led control
    TEMPERATURE_WAIT SENSOR="extruder" MINIMUM={HEPH}       ; nozzle full preheat
    G28A                            ; warm home all
    STATUS_HEATING                  ; stealthburner led control
    TEMPERATURE_WAIT SENSOR="heater_bed" MINIMUM={BED}      ; bed full temp

    # environment
    SET_FILAMENT_SENSOR SENSOR=RBOWDEN_SENSOR ENABLE=1      ; enable bowden runout sensor
    G90                             ; absolute positioning
    {% if printer["temperature_sensor chamber_temp"].temperature < CHAMBER %} 
      M117 Heatsoaking chamber
      CHAMBER_FAN_STOP              ; stop chamber exhaust fan
      M106 S192                     ; 75% print fan for extra warming
      G0 X150 Y150 Z50 F15000       ; move sb to center chamber warming position
      STATUS_HEATING                ; stealthburner led control
      TEMPERATURE_WAIT SENSOR="temperature_sensor chamber_temp" MINIMUM={CHAMBER}
      PRINT_FAN_START               ; return to preheat print fan speed
    {% endif %}

    # gantry leveling
    M117 Leveling gantry
    ATTACH_PROBE_LOCK               ; keep klicky connected during next macros
    QGTL                            ; double qgl = true level
    BED_MESH_CALIBRATE              ; generate bed level mesh
    DOCK_PROBE_UNLOCK               ; klicky *must* be docked before nozzle scrub

    # auto-z and z-drift compensation
    G0 X245 Y275 Z15 F15000         ; quickly move clear of klicky dock
    G0 X25 Y305 Z15 F15000          ; quickly move over purge bucket
    CLEAN_NOZZLE                    ; warm nozzle scrub for cleaner z home - no purge
    M117 Auto-Z
    G28A                            ; clean home reduces "no trigger on full travel" errors
    CALIBRATE_Z                     ; klicky auto-z magic
    SET_FRAME_COMP ENABLE=1         ; enable frame expansion compensation
    #SET_Z_THERMAL_ADJUST ENABLE=1  ; (new) frame expansion compensation

    # final nozzle prep
    M117 Nozzle purge
    G0 X245 Y275 Z15 F15000         ; quickly move clear of klicky dock
    G0 X25 Y305 Z15 F15000          ; quickly move over purge bucket to catch heating ooze
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={HOTEND}  ; set hotend full temp
    STATUS_HEATING                  ; stealthburner led control
    TEMPERATURE_WAIT SENSOR="extruder" MINIMUM={HOTEND}     ; hotend at full temp
    CLEAN_NOZZLE                    ; hot purge into bucket and final nozzle scrub
    G0 X25 Y275 Z10 F15000          ; quickly move away from purge bucket

    # start print
    CHAMBER_FAN_START               ; (re)start chamber exhaust fan
    STATUS_PRINTING                 ; stealthburner led control
    M117 Printing


##  slicer end
[gcode_macro PRINT_END] 
gcode:
    # calculate safe anti-stringing final printhead park location
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 10, th.axis_maximum.z]|min %}

    # cooldown process
    M400                            ; wait for buffer to clear
    G92 E0                          ; zero the extruder
    G1 E-10.0 F3600                 ; retract filament
    TURN_OFF_HEATERS                ; turn off all heaters
    G90                             ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000     ; move head to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F5000   ; park head at rear
    M106 S64                        ; print fan to 25%
    UPDATE_DELAYED_GCODE ID=POST_PRINT_FANS DURATION=900    ; circulation fans off after 15m
    SET_FILAMENT_SENSOR SENSOR=RBOWDEN_SENSOR ENABLE=0      ; turn off runout sensor
    CANOPY_LED_FLASH                ; flasher
    STATUS_READY                    ; stealthburner led control
    M117 Print finished


##  basic single pass single sample gantry leveling
[gcode_macro QGL] 
gcode:
    G90                             ; absolute positioning
    BED_MESH_CLEAR                  ; clear bed level mesh
    CG28                            ; home if not already homed
    QUAD_GANTRY_LEVEL RETRIES=0 SAMPLES=1 SPEED=10  ; fast pass qgl
    G28A                            ; z will change after qgl


##  double pass gantry leveling
[gcode_macro QGTL] 
gcode:
    G90                             ; absolute positioning
    BED_MESH_CLEAR                  ; clear bed level mesh
    CG28                            ; home if not already homed
    QUAD_GANTRY_LEVEL RETRIES=0 SAMPLES=1 SPEED=10  ; fast pass qgl
    QUAD_GANTRY_LEVEL RETRIES=5 SAMPLES=3 SPEED=8   ; slow second pass = true level
    #QUAD_GANTRY_LEVEL RETRIES=5 SAMPLES=3 SPEED=8 SAMPLE_RETRACT_DIST=2
    G28A                            ; z will change after qgl


##  double pass gantry leveling with locked klicky
[gcode_macro QGTL_LOCK] 
gcode:
    CG28                            ; home if not already homed
    ATTACH_PROBE_LOCK               ; keep klicky connected during next macros
    QGTL                            ; double pass qgl macro
    DOCK_PROBE_UNLOCK               ; release klicky


##  basic abs/asa preheat parameters
[gcode_macro PREHEAT_ABS] 
gcode:
    STATUS_HEATING                  ; stealthburner led control
    NEVERMORE_START                 ; nevermore cleans and speeds up warming
    M106 S128                       ; print fan for chamber warming
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=105
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET=175
    M117 Preheating


[gcode_macro COOLDOWN]
gcode:
    TURN_OFF_HEATERS                ; turn off all heaters
    UPDATE_DELAYED_GCODE ID=POST_PRINT_FANS DURATION=20     ; fans off after 20s
    M84                             ; turn off steppers
    CANOPY_LED_OFF                  ; turn off canopy lights
    STATUS_OFF                      ; stealthburner led control


##  delayed gcode to stop the various CNC fans after a print ends
##  gets called by PRINT_END and COOLDOWN
[delayed_gcode POST_PRINT_FANS]
gcode:
    NEVERMORE_STOP                  ; turn off nevermore fans
    CHAMBER_FAN_STOP                ; turn off chamber fan
    PRINT_FAN_STOP                  ; turn off print fan


##  park over bed center
[gcode_macro PARK] 
gcode:
    CG28                            ; home if not already homed
    G90                             ; absolute positioning
    G0 X150 Y150 Z45 F15000         ; move to position


##  park in front for maintenance / cleaning
[gcode_macro PARKFRONT] 
gcode:
    CANOPY_LED_FULL                 ; set canopy light to full brightness
    CG28                            ; home if not already homed
    G90                             ; absolute positioning
    G0 X150 Y10 Z100 F15000         ; move to position


##  park in rear for maintenance / cleaning
[gcode_macro PARKREAR] 
gcode:
    CANOPY_LED_FULL                 ; set canopy light to full brightness
    CG28                            ; home if not already homed
    G90                             ; absolute positioning
    G0 X150 Y300 Z100 F15000        ; move to position


##  park over top of the purge bucket
[gcode_macro PARKBUCKET] 
gcode:
    CG28                            ; home if not already homed
    G90                             ; absolute positioning
    G0 X25 Y305 Z15 F15000          ; move to position


##  activate heaters/fans/leds, runs a fast qgl, then parks over bed center
[gcode_macro PARKPREHEAT] 
gcode:
    {% if printer.idle_timeout.state != "Printing" %}
        CANOPY_LED_PRINT            ; set canopy light to print brightness
        PREHEAT_ABS                 ; preheat profile
        QGL                         ; basic quad gantry level
        G90                         ; absolute positioning
        G0 X150 Y150 Z50 F15000     ; move ab to center chamber warming position
        STATUS_HEATING              ; stealthburner led control
    {% else %}
        { action_respond_info("PARK disabled while printing!") }
    {% endif %}


##  activate heaters/fans then double-pass qgl
[gcode_macro QGLPREHEAT] 
gcode:
    {% if printer.idle_timeout.state != "Printing" %}
        CANOPY_LED_PRINT            ; set canopy light to print brightness
        PREHEAT_ABS                 ; preheat profile
        QGL                         ; basic quad gantry level
        G90                         ; absolute positioning
        G0 X140 Y305 Z25 F15000     ; move ab to rear chamber warming position
        STATUS_HEATING              ; stealthburner led control
    {% else %}
        { action_respond_info("PARK disabled while printing!") }
    {% endif %}


##  activate heaters/fans then double-pass qgl
[gcode_macro QGTLPREHEAT] 
gcode:
    {% if printer.idle_timeout.state != "Printing" %}
        CANOPY_LED_PRINT            ; set canopy light to print brightness
        PREHEAT_ABS                 ; preheat profile
        QGTL_LOCK                   ; quad gantry true level
        G90                         ; absolute positioning
        G0 X140 Y305 Z25 F15000     ; move ab to rear chamber warming position
        STATUS_HEATING              ; stealthburner led control
    {% else %}
        { action_respond_info("PARK disabled while printing!") }
    {% endif %}


##  enable chamber exhaust fan
[gcode_macro CHAMBER_FAN_START] 
gcode:
    UPDATE_DELAYED_GCODE ID=POST_PRINT_FANS DURATION=0  ; cancel delayed fan shut off
    SET_FAN_SPEED FAN=CHAMBER_FAN SPEED=0.15

##  turn off chamber exhaust fans
[gcode_macro CHAMBER_FAN_STOP] 
gcode:
    SET_FAN_SPEED FAN=CHAMBER_FAN SPEED=0


##  enable nevermore fans
[gcode_macro NEVERMORE_START] 
gcode:
    UPDATE_DELAYED_GCODE ID=POST_PRINT_FANS DURATION=0  ; cancel delayed fan shut off
    SET_FAN_SPEED FAN=NEVERMORE SPEED=0.9

##  turn off nevermore fans
[gcode_macro NEVERMORE_STOP] 
gcode:
    SET_FAN_SPEED FAN=NEVERMORE SPEED=0


##  enable part cooling fan
[gcode_macro PRINT_FAN_START] 
gcode:
    UPDATE_DELAYED_GCODE ID=POST_PRINT_FANS DURATION=0  ; cancel delayed fan shut off
    M106 S90  ; parts fan 35%

##  turn off part cooling fan
[gcode_macro PRINT_FAN_STOP] 
gcode:
    M107  ; turn off parts fan


##  home all (xyz)
[gcode_macro G28A] 
gcode:
    G28 XYZ  ; home all


##  conditional G28
[gcode_macro CG28] 
gcode: 
    {% if printer.toolhead.homed_axes != "xyz" %}
        G28A
    {% endif %}


## easy button for pressure advance
[gcode_macro PRESSURE_ADVANCE]
gcode:
    {% set advance=params.ADVANCE|default(0.03) %}
    SET_PRESSURE_ADVANCE ADVANCE={advance}
 
## translate Marlin Linear Advance to Klipper PA value
[gcode_macro M900]
gcode:
    {% set advance=params.K|default(0.03) %}
    SET_PRESSURE_ADVANCE ADVANCE={advance}


##  i'm just here so i don't get typed
[gcode_macro FWRESTART] 
gcode:
    FIRMWARE_RESTART


[gcode_macro SHUTDOWN]
gcode:
    {action_call_remote_method("shutdown_machine")}


[gcode_macro REBOOT]
gcode:
    {action_call_remote_method("reboot_machine")}


[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
    TURN_OFF_HEATERS
    CANCEL_PRINT_BASE


[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
variable_extrude: 1.0       ; change this for more or less extrusion
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    ##### set park positon for x and y #####
    # default is your max posion from your printer.cfg
    {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
    {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% if act_z < (max_z - 2.0) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
        G1 E-{E} F2100
    {% else %}
        {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}
        G1 Z{z_safe} F900
        G90
        G1 X{x_park} Y{y_park} F6000
    {% else %}
        {action_respond_info("Printer not homed")}
    {% endif %} 


[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
        {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
        {% set get_params = "VELOCITY=15000" %}
    {% endif %}
    ##### end of definitions #####
    {% if printer.extruder.can_extrude|lower == 'true' %}
        G91
        G1 E{E} F2100
    {% else %}
        {action_respond_info("Extruder not hot enough")}
    {% endif %}  
    STATUS_PRINTING             ; stealthburner led control
    RESUME_BASE {get_params}

